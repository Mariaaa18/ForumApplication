@page "/RegisterUser"
@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@inject IAuthService authService
<h3>RegisterUser</h3>

<div class="card">
    <h3>Register User</h3>
    <div class="form-group field">
        <label>User name:</label>
        <input type="text" @bind="username" @bind:event="oninput"/>
       
         <label>Password:</label>
        <input type="text" @bind="password" @bind:event="oninput"/>
      
         <label>Age:</label>
        <input type="text" @bind="age" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
               <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Register" disabled="@(string.IsNullOrEmpty(username))" class="acceptbtn">Register</button>
    </div>
</div>

@code {
    private string username = "";
    private string password = "";
    private int age =0;
    private string resultMsg = "";
    private string color = "";
    
    private async Task Register()
    {
        resultMsg = "";

        try
        {
            await authService.RegisterAsync(new UserCreationDto(username,password,age));
            username = "";
            resultMsg = "User successfully created";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    } 
    
}